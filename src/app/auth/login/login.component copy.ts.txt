import { CommonModule } from '@angular/common';
import { ApplicationRef, Component, DestroyRef, ElementRef, ViewContainerRef, inject } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { FormsModule, NgForm } from '@angular/forms';
import { Router } from '@angular/router';
import { VcInputComponent } from '@app/shared/vc-libs/vc-input/vc-input.component';
import { APP_CONSTANTS, MessageType } from '@constants/app.constants';
import { STORAGE } from '@constants/storage.constant';
import { LoginResponse } from '@models/auth.model';
import { TranslateModule } from '@ngx-translate/core';
import { AlertToastrService } from '@services/alert-toastr.service';
import { AuthenticationService } from '@services/authentication.service';
import { StorageService } from '@services/storage.service';
import { UtilityService } from '@services/utility.service';
import { HorizontalPosition, SnackbarStyleConfig, VcButtonComponent, VcLoggerService, VcSnackbarComponent, VcSnackbarService, VerticalPosition } from 'ng-utility-library';
// import { VcButtonComponent } from '@vc-libs/vc-button/vc-button.component';
// import { VcInputComponent } from '@vc-libs/vc-input/vc-input.component';
import { finalize } from 'rxjs';
// import { VcButtonComponent, VcInputComponent, VcLoggerService } from 'viitorcloud-ng-utility-library';
// import { VcButtonComponent, VcInputComponent } from 'viitorcloud-ng-utility-library';


@Component({
  selector: 'app-login',
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    VcButtonComponent,
    VcInputComponent,
    VcSnackbarComponent,
    TranslateModule],
  templateUrl: './login.component.html',
  providers: []
})
export class LoginComponent {

  isSubmitted = false;
  readonly supportEmail = APP_CONSTANTS.SUPPORT_EMAIL;
  private destroyRef = inject(DestroyRef);
  // snackbarMessage = 'This is a Snackbar message.';
  // snackbarVisible = false;


  // // snackbarMessage: string = 'This is a custom snackbar';
  // snackbarAction: string = 'Dismiss';
  // snackbarDuration: number = 5000;
  // snackbarHorizontalPosition: 'start' | 'center' | 'end' = 'center';
  // snackbarVerticalPosition: 'top' | 'bottom' = 'bottom';

  constructor(
    private storageService: StorageService,
    private router: Router,
    private authenticationService: AuthenticationService,
    private toasterService: AlertToastrService,
    private utilityService: UtilityService,
    private snackbar: VcSnackbarService,
    private service: VcSnackbarService,
    private viewContainerRef: ViewContainerRef,
    private appRef: ApplicationRef,
    private el: ElementRef,
  ) {
    this.service.setRootViewContainerRef(this.viewContainerRef, this.el)
  }

  onSubmit(loginForm: NgForm): boolean | void {
    if (loginForm.invalid) {
      return;
    }
    this.isSubmitted = true;
    this.authenticationService.login(loginForm.value)
      .pipe(takeUntilDestroyed(this.destroyRef), finalize(() => this.isSubmitted = false))
      .subscribe((res: LoginResponse) => {
        if (res) {
          this.storageService.set(STORAGE.LOGIN_TOKEN, res.token);
          this.storageService.set(STORAGE.USER_ROLE, res.role);
          this.storageService.set(STORAGE.USER_DATA, res);
          this.utilityService.changeLanguage(res.locale);

          this.router.navigate(['/admin']).then(() => {
            this.toasterService.displaySnackBarWithTranslation(
              'toasterMessage.loggedInSuccessfully', MessageType.success
            );
          });
        }
      });
  }

  navigateToForgotPassword() {
    this.router.navigate(['/auth/forgot-password']);
  }
  test() {
    VcLoggerService.log("sdhjsfnd");
    VcLoggerService.error("error");
    VcLoggerService.warn("warn");

  }

  showSnackbar() {
    const message = 'This is a custom snackbar';
    const action = 'Dismiss';
    const duration = 5000;
    const horizontalPosition: HorizontalPosition = 'start';

    const verticalPosition: VerticalPosition = 'top';
    const styleConfig: SnackbarStyleConfig = {
      width: '900px',
      backgroundColor: "lightblue",
      color: 'chocolate'
    }
    /** pass custom message in snackbar */
    // const obj = { message }
    /** pass custom message,action in snackbar */
    // const obj = { message, action }
    /** pass custom message,action,duration in snackbar */
    // const obj = { message, action, duration }
    /** pass custom message,action,duration,horizontalPosition in snackbar */
    // const obj = { message, action, duration, horizontalPosition }
    /** pass custom message,action,duration,horizontalPosition,verticalPosition in snackbar */
    // const obj = { message, action, duration, horizontalPosition, verticalPosition }
    /** pass custom message,action,duration,horizontalPosition,verticalPosition,styleConfig in snackbar */
    const obj = { message, action, duration, horizontalPosition, verticalPosition }
    this.snackbar.showSnackbar(obj, styleConfig);

  }
}
